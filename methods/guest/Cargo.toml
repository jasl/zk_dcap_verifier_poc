[package]
name = "guest_for_zk_dcap_verifier"
version = "0.1.0"
edition = "2021"

[workspace]

[dependencies]
# If you want to try (experimental) std support, add `features = [ "std" ]` to risc0-zkvm
risc0-zkvm = { version = "0.21.0", default-features = false }

primitive-io = { path = "../../primitive-io" }

serde = { version = "1.0.197", default-features = false, features = ["alloc", "derive"] }
# serde_json = { version = "1.0.107", default-features = false, features = ["alloc"] }
pink-json = { version = "0.4", default-features = false } # serde_json isn't determinism
scale-codec = { version = "3.6.5", package = "parity-scale-codec", default-features = false, features = ["derive"] }
scale-info = { version = "2.10.0", default-features = false, features = ["derive"] }
hex = { version = "0.4.3", default-features = false, features = ["alloc", "serde"] }
base64 = { version = "0.21.7", default-features = false, features = ["alloc"] }
byteorder = { version = "1.5.0", default-features = false }
chrono = { version = "0.4.31", default-features = false, features = ["alloc", "serde"] }

anyhow = { version = "1.0.79", default-features = false }
thiserror = "1.0.50"

x509-verify = { version = "0.4.5", default-features = false, features = ["pem", "x509", "rsa", "sha2", "p256"] }
pem = { version = "3", default-features = false }

#ring = { version = "0.17.5", default-features = false, features = ["alloc"] }
#webpki = { version = "0.102.0-alpha.6", package = "rustls-webpki", default-features = false, features = ["alloc", "ring"] }
#const-oid = { version = "0.9.5", default-features = false }
#der = { version = "0.7.8", default-features = false }
#pem = { version = "3", default-features = false }
#x509-cert = { version = "0.2.4", default-features = false }

[patch.crates-io]
# Placing these patch statement in the workspace Cargo.toml will add RISC Zero SHA-256 and bigint
# multiplication accelerator support for all downstream usages of the following crates.
crypto-bigint = { git = "https://github.com/risc0/RustCrypto-crypto-bigint.git", tag = "v0.5.5-risczero.0" }
#curve25519-dalek = { git = "https://github.com/risc0/curve25519-dalek.git", tag = "curve25519-4.1.0-risczero.1" }
#curve25519-dalek-derive = { git = "https://github.com/risc0/curve25519-dalek.git", tag = "curve25519-4.1.0-risczero.1" }
#k256 = { git = "https://github.com/risc0/RustCrypto-elliptic-curves", tag = "k256/v0.13.3-risczero.0"  }

[profile.release]
# Empirically observed to result in the best performance for this binary (in particular, better than
# "fat"). It's often a good idea to experiment with different optimization levels and options.
codegen-units = 1
lto = "thin"